package samples;


import java.util.ArrayList;
import java.util.List;

import com.bmskinner.nuclear_morphology.components.generic.IProfile;
import com.bmskinner.nuclear_morphology.components.generic.ISegmentedProfile;
import com.bmskinner.nuclear_morphology.components.generic.SegmentedFloatProfile;
import com.bmskinner.nuclear_morphology.components.nuclear.IBorderSegment;

public class IndividualNuclei {
	
	/**
	 * Create a segmented median profile for a test mouse population
	 * @return
	 * @throws Exception 
	 */
	public static ISegmentedProfile rodentSpermMedianProfile() throws Exception{

		// This is based on the median profile from /Testing
		float[] data = {107.4740444f, 109.8145479f, 112.1186561f, 115.5660842f, 120.5245383f, 125.8270102f, 131.8406741f, 136.7094901f, 141.786581f, 146.9091081f, 151.6641077f, 154.9818155f, 157.8454842f, 160.8319482f, 161.2958521f, 161.1592669f, 161.6305998f, 160.5378846f, 158.4281351f, 157.3296499f, 155.391726f, 153.1605239f, 152.1336184f, 147.9938718f, 146.0472084f, 143.9371892f, 141.565737f, 140.2832963f, 139.4804612f, 139.1066434f, 139.2171187f, 139.6143622f, 140.5694089f, 142.2163288f, 143.9061116f, 145.1650204f, 146.7199926f, 149.6106553f, 151.912988f, 154.3649661f, 155.8876104f, 158.4263097f, 160.6925368f, 162.5483954f, 163.7618201f, 165.0832408f, 166.075218f, 166.5656121f, 167.138599f, 167.5054969f, 167.6553307f, 167.8037395f, 168.0700599f, 168.1581666f, 167.7659965f, 167.5056897f, 167.6891683f, 167.8367536f, 168.0306533f, 168.0577956f, 167.8057135f, 168.2105555f, 168.1547843f, 168.0816109f, 167.8330844f, 167.8704818f, 167.9733535f, 168.2855528f, 168.722851f, 168.6312522f, 168.5960052f, 168.5750949f, 168.4899894f, 168.5682676f, 168.584926f, 168.5863019f, 168.7825292f, 169.2627271f, 169.4873638f, 169.3446441f, 169.5438167f, 169.9740198f, 169.4633729f, 169.3065235f, 169.28033f, 168.3685037f, 168.2512688f, 168.4212496f, 168.8013984f, 168.9702623f, 168.8479896f, 168.7656442f, 168.8680482f, 168.9650772f, 169.0643149f, 169.1917946f, 169.1571722f, 169.4861549f, 169.7729988f, 169.349675f, 169.5322296f, 169.7040292f, 170.287874f, 170.3496372f, 170.5520525f, 170.9377365f, 171.0973023f, 171.3356608f, 171.5493443f, 171.2822612f, 170.8114724f, 170.7112539f, 170.8665206f, 170.8807533f, 170.7809076f, 170.7765092f, 170.7782609f, 170.4652602f, 170.0349984f, 170.2572959f, 170.3086171f, 170.5096766f, 170.5107339f, 170.3199631f, 170.3230544f, 170.177547f, 169.9873693f, 170.1052332f, 170.3607929f, 170.2530346f, 170.5773503f, 170.8741011f, 170.7319807f, 170.4561327f, 170.1957261f, 170.0964576f, 170.2625528f, 170.4401576f, 170.4919084f, 170.5279275f, 170.3149593f, 170.9360466f, 170.9019247f, 171.065066f, 170.9613967f, 170.4067069f, 170.579176f, 170.7597785f, 170.9063064f, 171.1798733f, 171.4299657f, 171.6545237f, 171.3451584f, 171.0805824f, 171.2409207f, 171.1424132f, 170.9314859f, 170.7399355f, 170.5202081f, 170.7427033f, 170.8122696f, 171.1845864f, 171.0783312f, 170.8648432f, 170.5238182f, 169.8403837f, 169.1895084f, 168.7244993f, 168.2019442f, 168.0761284f, 167.7078615f, 167.9206699f, 167.6180489f, 166.8615422f, 166.5174006f, 166.266705f, 166.2887578f, 166.2826724f, 165.2586868f, 163.611485f, 161.5005334f, 158.282925f, 154.5459988f, 149.8425406f, 144.5008583f, 138.9019517f, 130.4657277f, 120.7605056f, 109.7213921f, 97.41949765f, 84.81248013f, 73.12614183f, 62.99662541f, 54.97996427f, 49.02377736f, 44.68215569f, 42.08193275f, 41.44396541f, 42.58396973f, 45.28452914f, 50.14119664f, 56.32942696f, 65.45045114f, 76.10171457f, 89.90990558f, 103.8006317f, 118.8258127f, 133.5179083f, 146.2533798f, 157.8972616f, 166.9157781f, 176.2194721f, 182.8536241f, 187.8689847f, 192.8664483f, 197.1768684f, 200.8786438f, 202.710345f, 203.561619f, 204.1168536f, 203.6031127f, 203.1780729f, 202.8112027f, 201.9334829f, 201.2203867f, 200.4444816f, 199.5697417f, 199.1998835f, 198.7361558f, 198.6803863f, 199.0592207f, 199.224618f, 199.6258148f, 201.1351532f, 202.579301f, 203.3212869f, 204.1509588f, 205.103319f, 206.3986952f, 207.9411827f, 209.2626599f, 209.6011969f, 209.7839489f, 209.6108514f, 209.0507155f, 208.0706948f, 207.8266969f, 206.1350272f, 204.3474666f, 202.4240751f, 200.5114296f, 198.6433001f, 196.2869158f, 193.5059843f, 191.2904668f, 189.0706379f, 186.7971334f, 185.3519193f, 183.9851455f, 183.385253f, 182.1299813f, 181.0756622f, 180.4744827f, 179.8667012f, 179.7937724f, 179.6293289f, 179.4756566f, 179.6597471f, 179.9757862f, 180.0420315f, 180.0643134f, 180.1890414f, 180.6746452f, 180.9979049f, 180.9249613f, 180.7753929f, 180.7208434f, 180.7062927f, 180.7057273f, 180.8957279f, 181.1744446f, 180.6876498f, 180.0217363f, 179.7854491f, 179.4365873f, 178.8728773f, 178.2982808f, 177.651942f, 177.041158f, 176.3957419f, 175.6556781f, 174.8114319f, 173.6391864f, 172.3419718f, 170.9228971f, 169.47057f, 168.1331674f, 166.4859145f, 164.2161962f, 161.6615876f, 158.7743405f, 155.7107948f, 152.8961417f, 149.8717203f, 146.1356516f, 142.6986797f, 140.0762977f, 138.5513093f, 137.6333857f, 137.3922704f, 137.7590539f, 138.8876138f, 141.8731826f, 145.3047292f, 148.6758587f, 153.3348851f, 160.2862663f, 168.7319573f, 175.5558935f, 180.1639748f, 187.0446394f, 193.3616628f, 199.1537607f, 202.5051176f, 205.7281863f, 207.1058256f, 208.0386157f, 206.3581701f, 201.7312541f, 197.8288302f, 193.0671323f, 187.0819763f, 179.6046409f, 170.9054828f, 161.7403322f, 152.5409506f, 143.8659958f, 135.5769287f, 127.6579614f, 121.0820828f, 115.4253148f, 111.3921922f, 108.4905961f, 107.0757422f, 105.2479992f};
		return new SegmentedFloatProfile(data);
	}
	
	/**
	 * Create a median profile for a test pig population. This has come from 
	 * \Testing_Christchurch_pig\Pig_Subset_Fertile\
	 * @return
	 * @throws Exception 
	 */
	public static IProfile pigSpermMedianProfile() throws Exception{

		// This is based on the median profile from /Testing
		float[] data = { 154.8953075f, 154.5817983f, 154.3796007f, 154.3057885f, 154.3899313f, 154.2319f, 153.1165423f, 152.5995514f, 152.4875611f, 152.6441313f, 151.7902255f, 150.7910877f, 149.7214248f, 149.559004f, 149.2537083f, 148.6628203f, 149.4874453f, 149.1364244f, 149.0473097f, 149.4575806f, 149.8794281f, 150.8595789f, 151.5349643f, 151.2378601f, 150.8372881f, 151.3618028f, 152.9056603f, 153.1275321f, 153.0707086f, 154.5781604f, 155.2104757f, 156.1724111f, 156.6497081f, 157.2924802f, 157.7246344f, 158.4456423f, 159.4584576f, 160.8060943f, 161.1947142f, 162.0199482f, 162.2622768f, 162.1658272f, 163.5355531f, 164.5430648f, 165.0823808f, 165.5495764f, 166.0306203f, 166.2336565f, 166.4632559f, 167.606103f, 168.1712052f, 169.2930322f, 169.6545971f, 169.8555403f, 170.6218343f, 171.1397491f, 171.7002088f, 172.0201432f, 172.1084908f, 172.5257496f, 173.129021f, 173.0498288f, 173.3400589f, 173.9104708f, 173.8959741f, 174.3489747f, 174.3129546f, 174.5185178f, 174.724632f, 174.7456042f, 174.9261512f, 175.0969478f, 175.4001962f, 175.7480648f, 175.444042f, 175.2096251f, 175.2846227f, 175.4649121f, 175.529389f, 176.0192553f, 176.1924267f, 176.5624597f, 176.4975984f, 176.7031431f, 176.6299831f, 176.5523534f, 176.8775596f, 176.6345773f, 176.5430332f, 176.598757f, 176.394866f, 176.3883873f, 176.4278008f, 176.0668f, 175.9095129f, 175.2978393f, 174.9501689f, 174.8473024f, 174.7183786f, 174.5935641f, 174.0754389f, 173.9711109f, 173.5965917f, 173.218667f, 173.0506279f, 173.0596337f, 173.0864678f, 172.9690873f, 173.0635083f, 173.2361354f, 173.006435f, 173.1675978f, 173.1696341f, 173.4300605f, 173.4330956f, 173.605946f, 174.0393275f, 174.1551223f, 174.6681885f, 174.9920527f, 174.7843809f, 175.2044641f, 175.5340834f, 175.8957147f, 175.7462554f, 175.7161705f, 175.0416792f, 174.466683f, 173.3826577f, 173.2044776f, 172.026299f, 169.8774617f, 166.8726692f, 165.050068f, 162.1077212f, 158.955744f, 154.4118611f, 150.7320723f, 146.1873715f, 141.7526918f, 138.8268892f, 134.1110757f, 131.2822473f, 128.4116308f, 125.4652127f, 122.5346347f, 121.1721213f, 120.4164454f, 120.7663443f, 122.3578422f, 124.6031746f, 127.8570865f, 132.4979267f, 137.7412583f, 143.6706198f, 149.9162801f, 155.9551769f, 161.6894821f, 168.1128979f, 174.2025947f, 178.7779199f, 184.0491288f, 187.0775557f, 189.2405314f, 188.9569513f, 189.9611711f, 187.8010677f, 186.850774f, 184.1752543f, 180.5349422f, 173.6659111f, 167.5361693f, 161.6475639f, 155.636266f, 150.1811176f, 144.1558112f, 139.018057f, 133.9760728f, 129.9355213f, 125.6319961f, 123.2696787f, 121.781193f, 121.0798247f, 121.5267495f, 123.1056145f, 123.9623184f, 126.523218f, 129.9056237f, 133.5356846f, 137.1479918f, 140.2136224f, 145.1779106f, 149.1196252f, 151.9937285f, 156.7330142f, 158.8759725f, 162.8452475f, 165.984651f, 168.8101039f, 170.7102663f, 172.6395082f, 174.0413424f, 174.9927975f, 175.4311897f, 175.9662233f, 175.1380018f, 175.2803999f, 175.3604004f, 175.239381f, 174.4652959f, 174.3084374f, 173.9231391f, 173.7977298f, 173.8802313f, 173.4908475f, 173.2427639f, 173.2315616f, 173.1312042f, 173.4560405f, 172.9540066f, 173.1471292f, 173.080018f, 173.4500832f, 173.3655019f, 173.5401395f, 173.5991915f, 173.6484239f, 173.6568684f, 173.7869823f, 174.273408f, 174.3318353f, 174.5617801f, 175.0005835f, 175.3286029f, 175.0847156f, 175.0468152f, 175.1512742f, 175.2956624f, 175.5424045f, 175.775914f, 176.3104472f, 176.4085665f, 176.4632545f, 176.5111916f, 177.0159307f, 177.0734493f, 176.9355527f, 176.6894611f, 176.631061f, 176.6485334f, 176.4882276f, 176.4641208f, 176.0540135f, 175.4770268f, 175.3484972f, 175.4730828f, 175.1570348f, 174.9701065f, 174.6982874f, 174.6267293f, 174.6564072f, 174.5677721f, 174.4816767f, 174.0928055f, 174.1177122f, 173.4990475f, 173.4193722f, 173.347182f, 173.3579428f, 172.8459981f, 172.5455327f, 172.0989231f, 171.9136959f, 171.5269046f, 171.0687173f, 170.6310558f, 170.3818041f, 169.6214214f, 169.6341252f, 169.289963f, 169.5923856f, 168.8524443f, 168.4452098f, 167.6334447f, 166.9260004f, 165.8568283f, 165.2085413f, 164.9837669f, 164.2572215f, 163.0826349f, 161.384849f, 160.7728141f, 160.9019823f, 159.6035588f, 159.1067295f, 158.0795605f, 157.5954086f, 157.2775611f, 156.371002f, 155.4641694f, 154.8904588f, 154.4969196f, 153.6631918f, 152.5456617f, 151.4378344f, 151.0971389f, 151.0229853f, 150.3461231f, 150.1737868f, 149.2014029f, 148.7848491f, 148.6213978f, 148.7239049f, 148.3994813f, 148.8595974f, 149.7525616f, 150.0671948f, 150.244483f, 151.126518f, 152.1128558f, 152.3225969f, 153.5633228f, 153.9437628f, 154.6688924f, 154.7295516f, 154.3982333f, 154.419497f };
		
		return new SegmentedFloatProfile(data);
	}
	
	/**
	 * Create a segmented profile from pig data. Based on the nuclei in
	 * \Testing_Christchurch_pig\Pig_Subset_Fertile\
	 * @return
	 * @throws Exception
	 */
	public static ISegmentedProfile pigSpermSegmentedMedianProfile() throws Exception {
		
		// Segment boundaries are chosen from prior segmentation
		IBorderSegment seg0 = IBorderSegment.newSegment(  0,  16, 327);
		IBorderSegment seg1 = IBorderSegment.newSegment( 16, 147, 327);
		IBorderSegment seg2 = IBorderSegment.newSegment(147, 163, 327);
		IBorderSegment seg3 = IBorderSegment.newSegment(163, 182, 327);
		IBorderSegment seg4 = IBorderSegment.newSegment(182, 312, 327);
		IBorderSegment seg5 = IBorderSegment.newSegment(312, 326, 327);
		
		List<IBorderSegment> list = new ArrayList<IBorderSegment>();
		list.add(seg0);
		list.add(seg1);
		list.add(seg2);
		list.add(seg3);
		list.add(seg4);
		list.add(seg5);
		
		IBorderSegment.linkSegments(list);
		
		// Add the segments to the sample data
		ISegmentedProfile p = new SegmentedFloatProfile(pigSpermMedianProfile(), list);
		return p;

		
	}

}
